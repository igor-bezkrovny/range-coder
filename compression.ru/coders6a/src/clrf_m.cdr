#define  DO(n)	   for (int _=0; _<n; _++)
#define  TOP	   (1<<24)

//typedef unsigned long long int qword;
typedef unsigned __int64 qword;

uint  range;
class RangeCoder
{
 qword low;
 uint  code;
 uint  cL;

public:

 inline uint muldivR( uint a, uint b )
 { 
//   uint r;
   __asm		{
			mov	eax,a
			mul	b
			div	range
//			mov	r,eax
			}
//   return r;
 }

 inline uint mulRdiv( uint a, uint c )
 { 
//   uint r;
   __asm		{
			mov	eax,a
			mul	range
			div	c
//			mov	r,eax
			}
//   return r;
 }


 void StartEncode( void )    
 { 
   low   = 0;  
   range = (uint)-1; 
 }

 void StartDecode( void )    
 {
   uc c;
   cL  = 0;
   range = (uint)-1;
   DO(8) c    = InpSrcByte(), 
         code = (code<<8) | c,
         cL = (cL<<1) + (c==0xFF);
          
 }

 void FinishEncode( void ) 
 { 
   DO(8) OutTgtByte( low>>56 ), low<<=8; 
 }

 void FinishDecode( void ) {}

 void Encode (uint cumFreq, uint freq, uint totFreq) 
 {
//   low  += cumFreq * (range/= totFreq);
//   range*= freq;
   uint tmp = mulRdiv( cumFreq, totFreq ) + 1;
   low += tmp;
   range = mulRdiv( cumFreq+freq, totFreq ) - tmp;

   if( range<0x01000000 ) { 

     do {

       OutTgtByte( uc(low>>56) );
       if( range<0x00010000 ) {
         OutTgtByte( uc(low>>48) );
         if( range<0x00000100 ) {
           OutTgtByte( uc(low>>40) );
                  range<<=24, low<<=24; 
         } else range<<=16, low<<=16; 
       } else range<<=8, low<<=8; 

     } while( (int(low>>32)==-1) && (range=0xFF,1) );
   }
 }

 uint GetFreq (uint totFreq) {
   return muldivR( code, totFreq );
//   return code/(range/=totFreq);
 }

 void Decode (uint cumFreq, uint freq, uint totFreq) 
 {
//   code -= cumFreq * range;
//   range*= freq;
   uint tmp = mulRdiv( cumFreq, totFreq ) + 1;
   code -= tmp;
   range = mulRdiv( cumFreq+freq, totFreq ) - tmp;

   if( range<0x01000000 ) {
     uc c;

     do {

       code=(code<<8)|(c=InpSrcByte()),cL=(cL<<1)+((c+1U)>>8);     
       if( range<0x00010000 ) {
         code=(code<<8)|(c=InpSrcByte()),cL=(cL<<1)+((c+1U)>>8);     
         if( range<0x00000100 ) {
           code=(code<<8)|(c=InpSrcByte()),cL=(cL<<1)+((c+1U)>>8);
                  range<<=24;
         } else range<<=16;
       } else range<<=8;

     } while( (uc(cL)>=0xF0) && (range=0xFF,1) );
   }

 }

};
